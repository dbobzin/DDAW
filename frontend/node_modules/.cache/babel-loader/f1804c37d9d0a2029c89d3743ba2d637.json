{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbobzin\\\\OneDrive - IL State University\\\\Desktop\\\\final_Project\\\\MERN-Auth-Tutorial-lesson-1\\\\MERN-Auth-Tutorial-lesson-1\\\\frontend\\\\src\\\\components\\\\WorkoutForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useWorkoutsContext } from \"../hooks/useWorkoutsContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\"; // import { DropDownList } from \"@progress/kendo-react-dropdowns\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WorkoutForm = () => {\n  _s();\n\n  const {\n    dispatch\n  } = useWorkoutsContext();\n  const {\n    user\n  } = useAuthContext();\n  const [title, setTitle] = useState(\"\");\n  const [load, setLoad] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [plan, setPlan] = useState([\" Select a plan: \"]); // const [plan, setPlan] = [25, 29, 35, 40];\n\n  const data = [{\n    id: 1,\n    label: \"Gold\",\n    type: \"25\"\n  }, {\n    id: 2,\n    label: \"platinum w/ rainx\",\n    type: \"29\"\n  }, {\n    id: 3,\n    label: \"elite\",\n    type: \"35\"\n  }, {\n    id: 4,\n    label: \"elite w/ ceramic\",\n    type: \"40\"\n  }, {\n    id: 5,\n    label: \"best package includes everything\",\n    type: \"40\"\n  }];\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]); // const handlePlanChange = (e) => {\n  //   setPlan(e.target.value);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!user) {\n      setError(\"You must be logged in\");\n      return;\n    }\n\n    const workout = {\n      title,\n      load,\n      reps,\n      plan\n    };\n    const response = await fetch(\"/api/workouts\", {\n      method: \"POST\",\n      body: JSON.stringify(workout),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n\n    if (response.ok) {\n      setTitle(\"\");\n      setLoad(\"\");\n      setReps(\"\");\n      setPlan(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new workout added\", json);\n      dispatch({\n        type: \"CREATE_WORKOUT\",\n        payload: json\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a Carwash Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name of Plan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setTitle(e.target.value),\n        value: title,\n        className: emptyFields.includes(\"title\") ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Load (in kg):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setLoad(e.target.value),\n        value: load,\n        className: emptyFields.includes(\"load\") ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reps:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        onChange: e => setReps(e.target.value),\n        value: reps,\n        className: emptyFields.includes(\"reps\") ? \"error\" : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; // };\n\n\n_s(WorkoutForm, \"Ij5ekC4x2UcB5d4EeFVtN76Fx6Q=\", false, function () {\n  return [useWorkoutsContext, useAuthContext];\n});\n\n_c = WorkoutForm;\nexport default WorkoutForm; // {/* <div>\n//     {plan}\n//     <select onChange={handlePlanChange}>\n//       <option value=\" Select a plan: \"> -- Select a fruit -- </option>\n//             {/* Mapping through each fruit object in our fruits array\n//           and returning an option element with the appropriate attributes / values.\n//          */}\n//          {plan.map((plan) => <option value={plan.value}>{plan.label}</option>)}\n//          </select>\n//          </div> */}\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkoutForm\");","map":{"version":3,"names":["useState","useWorkoutsContext","useAuthContext","WorkoutForm","dispatch","user","title","setTitle","load","setLoad","reps","setReps","plan","setPlan","data","id","label","type","error","setError","emptyFields","setEmptyFields","handleSubmit","e","preventDefault","workout","response","fetch","method","body","JSON","stringify","headers","Authorization","token","json","ok","console","log","payload","target","value","includes"],"sources":["C:/Users/dbobzin/OneDrive - IL State University/Desktop/final_Project/MERN-Auth-Tutorial-lesson-1/MERN-Auth-Tutorial-lesson-1/frontend/src/components/WorkoutForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useWorkoutsContext } from \"../hooks/useWorkoutsContext\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\n// import { DropDownList } from \"@progress/kendo-react-dropdowns\";\n\nconst WorkoutForm = () => {\n  const { dispatch } = useWorkoutsContext();\n  const { user } = useAuthContext();\n\n  const [title, setTitle] = useState(\"\");\n  const [load, setLoad] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [plan, setPlan] = useState([\" Select a plan: \"]);\n  // const [plan, setPlan] = [25, 29, 35, 40];\n  const data = [\n    {\n      id: 1,\n      label: \"Gold\",\n      type: \"25\",\n    },\n    {\n      id: 2,\n      label: \"platinum w/ rainx\",\n      type: \"29\",\n    },\n    {\n      id: 3,\n      label: \"elite\",\n      type: \"35\",\n    },\n    {\n      id: 4,\n      label: \"elite w/ ceramic\",\n      type: \"40\",\n    },\n    {\n      id: 5,\n      label: \"best package includes everything\",\n      type: \"40\",\n    },\n  ];\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n\n  // const handlePlanChange = (e) => {\n  //   setPlan(e.target.value);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!user) {\n      setError(\"You must be logged in\");\n      return;\n    }\n\n    const workout = { title, load, reps, plan };\n\n    const response = await fetch(\"/api/workouts\", {\n      method: \"POST\",\n      body: JSON.stringify(workout),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`,\n      },\n    });\n    const json = await response.json();\n\n    if (!response.ok) {\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setTitle(\"\");\n      setLoad(\"\");\n      setReps(\"\");\n      setPlan(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"new workout added\", json);\n      dispatch({ type: \"CREATE_WORKOUT\", payload: json });\n    }\n  };\n\n  return (\n    <>\n      <form className=\"create\" onSubmit={handleSubmit}>\n        <h3>Add a Carwash Plan</h3>\n        <label>Name of Plan:</label>\n        <input\n          type=\"number\"\n          onChange={(e) => setTitle(e.target.value)}\n          value={title}\n          className={emptyFields.includes(\"title\") ? \"error\" : \"\"}\n        />\n        <label>Load (in kg):</label>\n        <input\n          type=\"number\"\n          onChange={(e) => setLoad(e.target.value)}\n          value={load}\n          className={emptyFields.includes(\"load\") ? \"error\" : \"\"}\n        />\n        <label>Reps:</label>\n        <input\n          type=\"number\"\n          onChange={(e) => setReps(e.target.value)}\n          value={reps}\n          className={emptyFields.includes(\"reps\") ? \"error\" : \"\"}\n        />\n        {/* <label>Plan: </label> */}\n        {/* <input\n          // type=\"text\"\n          onChange={(e) => setPlan(e.target.value)}\n          value={plan}\n          className={emptyFields.includes(\"plan\") ? \"error\" : \"\"}\n          {...data.map((plan) => (\n            <option value={plan.value}>{plan.label}</option>\n          ))}\n        /> */}\n        {/* <select onChange={handlePlanChange}>\n          <option value=\" Select a plan: \"> -- Select a fruit -- </option>\n\n          {data.map((plan) => (\n            <option value={plan.value}>{plan.label}</option>\n          ))}\n        </select> */}\n        {/* Pick your favorite flavor:\n        <option value=\"grapefruit\">Grapefruit</option>\n        <option value=\"lime\">Lime</option>\n        <option value=\"coconut\">Coconut</option>\n        <option value=\"mango\">Mango</option>\n        <input type=\"submit\" value=\"Submit\" /> */}\n        <button>Add Workout</button>\n        {error && <div className=\"error\">{error}</div>}\n      </form>\n    </>\n  );\n};\n\n// };\n\nexport default WorkoutForm;\n\n// {/* <div>\n//     {plan}\n\n//     <select onChange={handlePlanChange}>\n//       <option value=\" Select a plan: \"> -- Select a fruit -- </option>\n//             {/* Mapping through each fruit object in our fruits array\n//           and returning an option element with the appropriate attributes / values.\n//          */}\n//          {plan.map((plan) => <option value={plan.value}>{plan.label}</option>)}\n//          </select>\n//          </div> */}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}