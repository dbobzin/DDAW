{"ast":null,"code":"import _defineProperty from \"C:/Users/dbobzin/OneDrive - IL State University/Desktop/final/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/dbobzin/OneDrive - IL State University/Desktop/final/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/dbobzin/OneDrive - IL State University/Desktop/final/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"C:/Users/dbobzin/OneDrive - IL State University/Desktop/final/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/dbobzin/OneDrive - IL State University/Desktop/final/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport { includeKeys } from 'filter-obj';\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n}; // eslint-disable-next-line unicorn/prefer-code-point\n\n\nvar strictUriEncode = function strictUriEncode(string) {\n  return encodeURIComponent(string).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};\n\nvar encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      {\n        return function (key) {\n          return function (result, value) {\n            var index = result.length;\n\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            }\n\n            if (value === null) {\n              return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n            }\n\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n          };\n        };\n      }\n\n    case 'bracket':\n      {\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            }\n\n            if (value === null) {\n              return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n            }\n\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n          };\n        };\n      }\n\n    case 'colon-list-separator':\n      {\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            }\n\n            if (value === null) {\n              return [].concat(_toConsumableArray(result), [[encode(key, options), ':list='].join('')]);\n            }\n\n            return [].concat(_toConsumableArray(result), [[encode(key, options), ':list=', encode(value, options)].join('')]);\n          };\n        };\n      }\n\n    case 'comma':\n    case 'separator':\n    case 'bracket-separator':\n      {\n        var keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            } // Translate null to an empty string so that it doesn't serialize as 'null'\n\n\n            value = value === null ? '' : value;\n\n            if (result.length === 0) {\n              return [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n            }\n\n            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n          };\n        };\n      }\n\n    default:\n      {\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            }\n\n            if (value === null) {\n              return [].concat(_toConsumableArray(result), [encode(key, options)]);\n            }\n\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n          };\n        };\n      }\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      {\n        return function (key, value, accumulator) {\n          result = /\\[(\\d*)]$/.exec(key);\n          key = key.replace(/\\[\\d*]$/, '');\n\n          if (!result) {\n            accumulator[key] = value;\n            return;\n          }\n\n          if (accumulator[key] === undefined) {\n            accumulator[key] = {};\n          }\n\n          accumulator[key][result[1]] = value;\n        };\n      }\n\n    case 'bracket':\n      {\n        return function (key, value, accumulator) {\n          result = /(\\[])$/.exec(key);\n          key = key.replace(/\\[]$/, '');\n\n          if (!result) {\n            accumulator[key] = value;\n            return;\n          }\n\n          if (accumulator[key] === undefined) {\n            accumulator[key] = [value];\n            return;\n          }\n\n          accumulator[key] = [].concat(_toConsumableArray(accumulator[key]), [value]);\n        };\n      }\n\n    case 'colon-list-separator':\n      {\n        return function (key, value, accumulator) {\n          result = /(:list)$/.exec(key);\n          key = key.replace(/:list$/, '');\n\n          if (!result) {\n            accumulator[key] = value;\n            return;\n          }\n\n          if (accumulator[key] === undefined) {\n            accumulator[key] = [value];\n            return;\n          }\n\n          accumulator[key] = [].concat(_toConsumableArray(accumulator[key]), [value]);\n        };\n      }\n\n    case 'comma':\n    case 'separator':\n      {\n        return function (key, value, accumulator) {\n          var isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n          var isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n          value = isEncodedArray ? decode(value, options) : value;\n          var newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n            return decode(item, options);\n          }) : value === null ? value : decode(value, options);\n          accumulator[key] = newValue;\n        };\n      }\n\n    case 'bracket-separator':\n      {\n        return function (key, value, accumulator) {\n          var isArray = /(\\[])$/.test(key);\n          key = key.replace(/\\[]$/, '');\n\n          if (!isArray) {\n            accumulator[key] = value ? decode(value, options) : value;\n            return;\n          }\n\n          var arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(function (item) {\n            return decode(item, options);\n          });\n\n          if (accumulator[key] === undefined) {\n            accumulator[key] = arrayValue;\n            return;\n          }\n\n          accumulator[key] = [].concat(_toConsumableArray(accumulator[key]), _toConsumableArray(arrayValue));\n        };\n      }\n\n    default:\n      {\n        return function (key, value, accumulator) {\n          if (accumulator[key] === undefined) {\n            accumulator[key] = value;\n            return;\n          }\n\n          accumulator[key] = [].concat(_toConsumableArray([accumulator[key]].flat()), [value]);\n        };\n      }\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nexport function extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\nexport function parse(query, options) {\n  options = _objectSpread({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var returnValue = Object.create(null);\n\n  if (typeof query !== 'string') {\n    return returnValue;\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n\n  if (!query) {\n    return returnValue;\n  }\n\n  var _iterator = _createForOfIteratorHelper(query.split('&')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var parameter = _step.value;\n\n      if (parameter === '') {\n        continue;\n      }\n\n      var _splitOnFirst = splitOnFirst(options.decode ? parameter.replace(/\\+/g, ' ') : parameter, '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          _key = _splitOnFirst2[0],\n          _value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      _value = _value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? _value : decode(_value, options);\n      formatter(decode(_key, options), _value, returnValue);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$entries = Object.entries(returnValue); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (typeof value === 'object' && value !== null) {\n      for (var _i2 = 0, _Object$entries2 = Object.entries(value); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            key2 = _Object$entries2$_i[0],\n            value2 = _Object$entries2$_i[1];\n\n        value[key2] = parseValue(value2, options);\n      }\n    } else {\n      returnValue[key] = parseValue(value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return returnValue;\n  } // TODO: Remove the use of `reduce`.\n  // eslint-disable-next-line unicorn/no-array-reduce\n\n\n  return (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce(function (result, key) {\n    var value = returnValue[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\nexport function stringify(object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = _objectSpread({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$entries3 = Object.entries(object); _i3 < _Object$entries3.length; _i3++) {\n    var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n        key = _Object$entries3$_i[0],\n        value = _Object$entries3$_i[1];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = value;\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n        return encode(key, options) + '[]';\n      }\n\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n}\nexport function parseUrl(url, options) {\n  var _url_$split$, _url_$split;\n\n  options = _objectSpread({\n    decode: true\n  }, options);\n\n  var _splitOnFirst3 = splitOnFirst(url, '#'),\n      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),\n      url_ = _splitOnFirst4[0],\n      hash = _splitOnFirst4[1];\n\n  return _objectSpread({\n    url: (_url_$split$ = url_ === null || url_ === void 0 ? void 0 : (_url_$split = url_.split('?')) === null || _url_$split === void 0 ? void 0 : _url_$split[0]) !== null && _url_$split$ !== void 0 ? _url_$split$ : '',\n    query: parse(extract(url), options)\n  }, options && options.parseFragmentIdentifier && hash ? {\n    fragmentIdentifier: decode(hash, options)\n  } : {});\n}\nexport function stringifyUrl(object, options) {\n  options = _objectSpread(_defineProperty({\n    encode: true,\n    strict: true\n  }, encodeFragmentIdentifier, true), options);\n  var url = removeHash(object.url).split('?')[0] || '';\n  var queryFromUrl = extract(object.url);\n\n  var query = _objectSpread(_objectSpread({}, parse(queryFromUrl, {\n    sort: false\n  })), object.query);\n\n  var queryString = stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  var hash = getHash(object.url);\n\n  if (object.fragmentIdentifier) {\n    var urlObjectForFragmentEncode = new URL(url);\n    urlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n    hash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : \"#\".concat(object.fragmentIdentifier);\n  }\n\n  return \"\".concat(url).concat(queryString).concat(hash);\n}\nexport function pick(input, filter, options) {\n  options = _objectSpread(_defineProperty({\n    parseFragmentIdentifier: true\n  }, encodeFragmentIdentifier, false), options);\n\n  var _parseUrl = parseUrl(input, options),\n      url = _parseUrl.url,\n      query = _parseUrl.query,\n      fragmentIdentifier = _parseUrl.fragmentIdentifier;\n\n  return stringifyUrl({\n    url: url,\n    query: includeKeys(query, filter),\n    fragmentIdentifier: fragmentIdentifier\n  }, options);\n}\nexport function exclude(input, filter, options) {\n  var exclusionFilter = Array.isArray(filter) ? function (key) {\n    return !filter.includes(key);\n  } : function (key, value) {\n    return !filter(key, value);\n  };\n  return pick(input, exclusionFilter, options);\n}","map":{"version":3,"names":["decodeComponent","splitOnFirst","includeKeys","isNullOrUndefined","value","undefined","strictUriEncode","string","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","encoderForArrayFormat","options","arrayFormat","key","result","index","length","skipNull","skipEmptyString","encode","join","keyValueSep","arrayFormatSeparator","parserForArrayFormat","accumulator","exec","isArray","includes","isEncodedArray","decode","newValue","split","map","item","test","arrayValue","flat","validateArrayFormatSeparator","TypeError","strict","keysSorter","input","Array","sort","Object","keys","a","b","Number","removeHash","hashStart","indexOf","slice","getHash","url","hash","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","formatter","returnValue","create","parameter","entries","key2","value2","reduce","Boolean","stringify","object","shouldFilter","objectCopy","filter","parseUrl","url_","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","queryString","urlObjectForFragmentEncode","URL","pick","exclude","exclusionFilter"],"sources":["C:/Users/dbobzin/OneDrive - IL State University/Desktop/final/frontend/node_modules/query-string/base.js"],"sourcesContent":["import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? parameter.replace(/\\+/g, ' ') : parameter, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}